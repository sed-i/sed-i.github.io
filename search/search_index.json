{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bookmarks","text":""},{"location":"#playgrounds","title":"Playgrounds","text":"<p>regex, jq, rust, godbolt</p>"},{"location":"#editors","title":"Editors","text":""},{"location":"#diagrams","title":"Diagrams","text":"<p>TablesGenerator, Mermaid, asciiflow, Excalidraw, Witeboard, Structurizr, Edotor, D2</p>"},{"location":"#text","title":"Text","text":"<p>Hemingway Editor, StackEdit</p>"},{"location":"#other","title":"Other","text":"<p>YAML parser</p>"},{"location":"#emulators","title":"Emulators","text":"<p>v86</p>"},{"location":"kids/","title":"Kids","text":""},{"location":"kids/#coding","title":"Coding","text":"<ul> <li>Games in Python</li> <li>MIT Scratch</li> </ul>"},{"location":"kids/#music","title":"Music","text":"<ul> <li>String pluck</li> </ul>"},{"location":"kids/#drawing","title":"Drawing","text":"<ul> <li>Excalidraw</li> <li>\"mspaint\"</li> </ul>"},{"location":"kids/#games","title":"Games","text":"<ul> <li>Triq (set-inspired)</li> </ul>"},{"location":"org-culture/","title":"Organizational culture","text":""},{"location":"org-culture/#elon-musk","title":"Elon Musk","text":""},{"location":"org-culture/#5-step-protocol","title":"5-step protocol<sup>1</sup>","text":"<ol> <li>Make the requirements less dumb.</li> <li>Try and delete part of the process.</li> <li>Simplify and optimize the design (don't optimize something that shouldn't exist).</li> <li>Accelerate cycle time (but don\u2019t go faster until you've worked on the other three things first).</li> <li>Automate (if a product is reaching the end of a production line with a high acceptance rate, there is no need for in-process testing).</li> </ol>"},{"location":"org-culture/#hiring","title":"Hiring","text":"<ul> <li>If candidate was responsible for- and struggled with a very difficult problem   then they really understand the problem, and they don't forget.</li> <li>Decision making process at key transition points of difficult problems.</li> </ul> <ol> <li> <p>Jeff Haden (2023), Elon Musk's 'Algorithm,' a 5-Step Process.\u00a0\u21a9</p> </li> </ol>"},{"location":"zen/","title":"Zen-collage","text":"<ul> <li>Duplication is far cheaper than the wrong abstraction.<sup>1</sup></li> <li>Pin libs to major version and apps to exact dependencies.<sup>2</sup></li> </ul> <ol> <li> <p>Sandi Metz, 2016.\u00a0\u21a9</p> </li> <li> <p>Nathaniel J. Smith, 2017.\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/degoogle/","title":"Degoogled android phone","text":"","tags":["android","privacy"]},{"location":"blog/degoogle/#why-android-and-why-degoogle","title":"Why android and why degoogle?","text":"<ul> <li>With an iPhone you don't have a choice - you're stuck with Apple. And Apple does not respect privacy (1, 2).</li> <li>Android phones typically come with Google Play Services pre-installed, and Google does not respect privacy (1).</li> <li>Fortunately, there are open source alternatives in the android world, and if you care about privacy you have some options.</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#pleasant-surprises-6-month-reflection","title":"Pleasant surprises (6 month reflection)","text":"<ul> <li>Lifestyle changed from chasing shininess to focusing on privacy and value.</li> <li>There are many incredible open source apps (list below). There are only a few apps that are painfully missing (traffic-aware navigation, banking). Often, there is an adequate web ui available.</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#the-mindset-that-would-make-the-transition-easier","title":"The mindset that would make the transition easier","text":"<ul> <li>You don't really need most non-opensource apps. Most apps you need likely have a web ui. The ones that do not - you can probably give up on them. Some apps with no good alternatives at the moment include: audible / library app, google maps / waze navigation.</li> <li>You won't be able to use the apps you already bought on Google Play, and that's ok.<ul> <li>Some vendors, such as Threema, sell their app on their own instance of F-Droid. That's awesome!</li> </ul> </li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#challenges-and-hopes","title":"Challenges and hopes","text":"<ul> <li>F-Droid doesn't install updates automatically: need to manually apply updates one by one. The idea is that users should review changes before applying updates. Not practical for most people and may become irritating.</li> <li>For apps that are not on F-Droid, you need to remember to periodically manually download apks (e.g. Mega).<ul> <li>More and more open source apps become available on F-Droid. Hopefully this continues and your apps will all become available on F-Droid.</li> <li>Some apps install their own updates. Signal, for example, notifies when an update is available and you can approve the update in a tap.</li> <li>Some authors have their own F-Droid repository, for example: threema. This way they are also able to collect payment without Play Services.</li> </ul> </li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#the-stack","title":"\"The stack\"","text":"","tags":["android","privacy"]},{"location":"blog/degoogle/#fundamentals","title":"Fundamentals","text":"<ul> <li>Pixel phone. The only phone with open source drivers.</li> <li>GrapheneOS. A very active ROM that also takes privacy very seriously.</li> <li>F-Droid. Doesn't install updates automatically (need to manually apply updates one by one; need to remember to periodically manually download apks from github for apps such as Mega -- but signal figured it out)</li> <li>AnySoftKeyboard. The only serious open source, privacy friendly keyboard. Reduced usability compared to commercial keyboards such as Gboard.</li> <li>Browse with Vanadium (built-in into GrapheneOS) and DuckDuckGo (great built-in ad blocking); use URLCheck as the default browser.</li> <li>Cloud storage: Mega, ente Photos.</li> <li>Navigation: Organic Maps.</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#identity","title":"Identity","text":"<ul> <li>Aegis</li> <li>Catima</li> <li>KeePassDX</li> <li>PassAndroid</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#productivity","title":"Productivity","text":"<ul> <li>Librera FD</li> <li>Overload.</li> <li>Proton (email, calendar).</li> <li>Tailscale.</li> <li>Translate You.</li> <li>Tuta.</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#messaging","title":"Messaging","text":"<ul> <li>Element</li> <li>Jami - supports SIP so you can have a virtual phone number.</li> <li>Mattermost</li> <li>Signal</li> <li>Telegram FOSS</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#activism","title":"Activism","text":"<ul> <li>StreetComplete</li> <li>Tower Collector</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#multimedia","title":"Multimedia","text":"<ul> <li>AntennaPod. Will take the familiar look of PocketCasts when you change the default page to \"subscriptions\".</li> <li>Clipious</li> <li>Jellyfin (+ tailscale)</li> <li>NewPipe - youtube, bandcamp.</li> </ul>","tags":["android","privacy"]},{"location":"blog/degoogle/#shitter","title":"Shitter","text":"<ul> <li>Feeder</li> <li>lichess</li> <li>Tusky</li> <li>Wikipedia</li> </ul>","tags":["android","privacy"]},{"location":"blog/ebpf-summit-2023-ctf/","title":"eBPF summit 2023 CTF","text":"<p>The eBPF summit held a CTF, which you can download from here.</p>","tags":["eBPF","CTF"]},{"location":"blog/ebpf-summit-2023-ctf/#heres-a-record-of-my-attempts","title":"Here's a record of my attempts.","text":"<pre><code>vagrant up\nvagrant ssh\n</code></pre> <p>Now what's in that file? <pre><code>$ sudo cat /ebpf.summit\nI've been in your kernel for [281.819050 seconds]\n$ sudo cat /ebpf.summit\nI've been in your kernel for [282.820065 seconds]\n</code></pre></p> <p>How is it updated so quickly? Are they constantly writing to that file?</p> <pre><code>$ ls -l /\ntotal 72\nlrwxrwxrwx   1 root    root        7 Aug 28 22:11 bin -&gt; usr/bin\ndrwxr-xr-x   3 root    root     4096 Aug 28 22:12 boot\ndrwxr-xr-x  17 root    root     3840 Sep 13 16:25 dev\n----------   1 root    root       50 Sep 13 16:30 ebpf.summit\ndrwxr-xr-x  91 root    root     4096 Sep 13 16:27 etc\n</code></pre> <p>What's <code>----------</code>?? <pre><code>$ stat /ebpf.summit\n  File: /ebpf.summit\n  Size: 50          Blocks: 8          IO Block: 4096   regular file\nDevice: 801h/2049d  Inode: 73151       Links: 1\nAccess: (0000/----------)  Uid: (    0/    root)   Gid: (    0/    root)\n</code></pre></p> <p>Oh ok it's just the result of <code>chmod ugo-rwx</code>. A user can lock itself out of their own file, but <code>root</code> still has access anyway.</p> <p>So, are they really writing so frequently or is there some other kind of magic?</p> <p><pre><code>$ sudo lsof /ebpf.summit\n</code></pre> Nothing.</p> <p><pre><code>$ ps aux | grep ebpf\n</code></pre> Nothing.</p> <p>Ok, this is an ebpf ctf, so let's see if there's a relevant tool in the diagram.</p> <p>Not much clue here but ioprofile seems relevant. Let's (blindly) try it out:</p> <pre><code>$ sudo apt install bpftrace  # then, save ioprofile script locally and chmod +x\n\n$ sudo ./ioprofile\nAttaching 25 probes...\nERROR: Could not resolve symbol: /proc/self/exe:BEGIN_trigger\n</code></pre> <p>Apparently I needed to install <code>bpftrace-dbgsym</code>.</p> <p><pre><code>$ sudo ./ioprofile\nAttaching 25 probes...\nTracing I/O syscall user stacks. Ctrl-C to end.\n</code></pre> and nothing is printed out. Not even when I create new files. Let's look elsewhere.</p> <p>Here's a recurring example from ebpf intros: <pre><code>$ sudo bpftrace -f json -e 'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); } interval:s:5 { print(@); clear(@); }'\n\n{\"type\": \"attached_probes\", \"data\": {\"probes\": 2}}\n{\"type\": \"map\", \"data\": {\"@\": {\"packagekitd\": 3, \"multipathd\": 43, \"irqbalance\": 44, \"bpftrace\": 62, \"tetragon\": 73, \"ebpf.summit.202\": 245}}}\n{\"type\": \"map\", \"data\": {\"@\": {\"sudo\": 10, \"sshd\": 13, \"tetragon\": 45, \"multipathd\": 52, \"bpftrace\": 55, \"ebpf.summit.202\": 226}}}\n{\"type\": \"map\", \"data\": {\"@\": {\"packagekitd\": 3, \"sudo\": 10, \"sshd\": 13, \"multipathd\": 44, \"irqbalance\": 44, \"bpftrace\": 58, \"tetragon\": 79, \"ebpf.summit.202\": 292}}}\n{\"type\": \"map\", \"data\": {\"@\": {\"sudo\": 10, \"sshd\": 13, \"multipathd\": 53, \"bpftrace\": 56, \"ebpf.summit.202\": 328, \"tetragon\": 358}}}\n{\"type\": \"map\", \"data\": {\"@\": {\"packagekitd\": 3, \"sudo\": 10, \"sshd\": 13, \"systemd-timesyn\": 18, \"systemd-network\": 18, \"systemd-resolve\": 18, \"multipathd\": 43, \"irqbalance\": 44, \"systemd\": 47, \"bpftrace\": 64, \"tetragon\": 77, \"ebpf.summit.202\": 316}}}\n</code></pre></p> <p>Ok <code>\"ebpf.summit.202\"</code> looks interesting. What's that?</p> <p><pre><code>$ pgrep -la \"ebpf\"\n</code></pre> Nothing.</p> <p>The eBPF book has a hint:</p> <p>You can see the available set of tracing subsystems on your kernel by looking at <code>/sys/kernel/tracing/available_events</code>, as follows: <code>cat /sys/kernel/tracing/available_events</code></p> <p>and another one:</p> <p><code>sudo bpftrace -l \"*write*\"</code></p> <p>but I didn't immediately see anything obvious.</p> <p>A bit more scrolling in the book, and:</p> <p>Scripts for bpftrace can coordinate multiple eBPF programs attached to different events. For example, consider the <code>opensnoop.bt</code> script that reports on files being opened.</p> <p>Let's give it a try:</p> <pre><code>$ sudo ./opensnoop\n./opensnoop:34:9-14: ERROR: Can not access field 'ret' on type '(ctx) struct _tracepoint_syscalls_sys_exit_openat *'. Try dereferencing it first, or using '-&gt;'\n    $ret = args.ret;\n           ~~~~~\n</code></pre> <p>Fixed two of these, and then:</p> <pre><code>$ sudo ./opensnoop\nAttaching 6 probes...\nTracing open syscalls... Hit Ctrl-C to end.\nPID    COMM               FD ERR PATH\n2545   ebpf.summit.202    18   0 /etc/passwd\n2545   ebpf.summit.202    18   0 /ebpf.summit\n2545   ebpf.summit.202    18   0 /etc/passwd\n2545   ebpf.summit.202    18   0 /ebpf.summit\n2545   ebpf.summit.202    18   0 /etc/passwd\n2545   ebpf.summit.202    18   0 /ebpf.summit\n2545   ebpf.summit.202    18   0 /etc/passwd\n2545   ebpf.summit.202    18   0 /ebpf.summit\n2545   ebpf.summit.202    18   0 /etc/passwd\n</code></pre> <p>For some reason, that PID does not show up in <code>ps</code>. Ah well, let's kill it:</p> <pre><code>$ sudo kill 2545\n$ sudo cat /ebpf.summit\n\nYou purged the computers of the malware - and not a second too late. Congratulations!\n</code></pre> <p>BTW, the <code>opensnoop</code> tool was on the tools diagram, I just didn't realize what it does!</p> <p>And now, it's probably a good idea to read up some references I picked up during the summit.</p>","tags":["eBPF","CTF"]},{"location":"blog/ebpf-summit-2023-ctf/#further-reading","title":"Further reading","text":"<ul> <li>The \"Learning eBPF\" book:   O'Reilly,   isovalent.</li> <li>BPF performance tools:   gh,   diagram,   reference guide,   cheat sheet.</li> <li>The opensnoop tool</li> <li>gh:grafana/beyla</li> <li>Pixie - eBPF o11y for k8s</li> <li>Tetragon - security observability</li> <li>List of the linux kernel system calls</li> <li>bpftune - sysctl autotuning</li> </ul>","tags":["eBPF","CTF"]},{"location":"blog/five-star-rank/","title":"5-star ranking system","text":""},{"location":"blog/five-star-rank/#wine","title":"Wine","text":"Rank Meaning \u2b50\u2b50\u2b50\u2b50\u2b50 Would drink again and again \u2b50\u2b50\u2b50\u2b50 Good as gift or for hosting \u2b50\u2b50\u2b50 A low cost for frequent consumption \u2b50\u2b50 Could drink but wouldn't choose/buy myself \u2b50 Wouldn't drink even if free"},{"location":"blog/five-star-rank/#movies","title":"Movies","text":"Rank Meaning \u2b50\u2b50\u2b50\u2b50\u2b50 Mesmerizing, brilliant, want to watch again and praise in front of everyone \u2b50\u2b50\u2b50\u2b50 A solid recommendation; a worthwhile time investment \u2b50\u2b50\u2b50 Ok movie, distasteful kitsch, but something most people are likely to enjoy \u2b50\u2b50 Could watch to the end but couldn't withhold vocalizing harsh criticism during \u2b50 It's so bad you had to stop midway"},{"location":"blog/five-star-rank/#books","title":"Books","text":"Rank Meaning \u2b50\u2b50\u2b50\u2b50\u2b50 Brilliant, want to read again and praise in front of everyone \u2b50\u2b50\u2b50\u2b50 A solid recommendation; a worthwhile time investment \u2b50\u2b50\u2b50 An entertaining, thought provoking read \u2b50\u2b50 Perhaps has a couple of somewhat exciting ideas but didn't finish reading \u2b50 Not readable for whatever reason (e.g. blind machine translation)"},{"location":"blog/simple-bird-house/","title":"Simple bird house","text":"<p>This is a parametric design idea for a single-plank bird house.</p> <p>The dimensions are determined by two variables:</p> <ul> <li>Width (W) of the front.</li> <li>Length (L) of the bird house (perhaps some would call it depth).</li> </ul> <p>The roof is at 45 degrees, so the left wall height is 2W and the right wall height is 3W.</p> <p>This means that you need:</p> <ul> <li>A plank of width W and length 5W+8L.</li> <li>Make one cut at 45 degrees.</li> <li>Make 8 cuts, producing 8 slabs of W x L.</li> <li>A bunch of nails.</li> </ul> <p>In the diagram below,</p> <ul> <li>W = 150 mm</li> <li>L = 250 mm</li> </ul> <p></p> <p>(Also in svg, pdf.)</p>","tags":["woodwork"]},{"location":"blog/simple-diy-desk/","title":"Simple desk","text":"<p>You can build a simple, tipover-safe desk in one evening, using 3 boards and a bunch of screws.</p> <p>To keep things simple:</p> Qtty Item Purpose 1 48x16 inch oak board Tabletop 2 48x20 inch oak board Table legs and back support ~30 Wood screws Fastening <ul> <li>Cut one of the 48x20'' boards in half. This would make the legs.</li> <li>90\u00b0 clamps can be very useful for maintaining alignment.</li> <li>A jigsaw can be useful for rounding corners.</li> </ul> <p></p> <p>(Also in svg, pdf.)</p>","tags":["woodwork"]},{"location":"blog/sodastream/","title":"How much carbonated water do you get from a sodastream?","text":"<p>How does sodastream compare to club soda in terms of pricing?</p> <p>I used a sodastream \"60L cylinder\" (14.5 oz / 410 g / 0.63 \u2113 CO2) to carbonate small (450 m\u2113) and large (840 m\u2113) bottles, and recorded how many of each I carbonated (three \"buzzes\" per bottle):</p> 450 ml 840 ml Total vol. 1 20 16 22.44 \u2113 2 9 20 20.85 \u2113 <p>Assuming I forgot to record a few, let's say a single sodastream canister carbonates 25 litres of water, which means</p> CO2 Soda yield 410 g 25 \u2113 <p>(which, by volume, is equivalent to 113 x 222 m\u2113 cans or 70 x 355 m\u2113 cans).</p> <p>At the grocery store:</p> <ul> <li>club soda is priced at about 1.5-1.8 $/100m\u2113;</li> <li>a CO2 cansiter is priced at about $40, i.e. 40 / (250 * 100 ml) = 0.16 $/100m\u2113 of soda.</li> </ul> <p>So sodastream is:</p> <ul> <li>10 times cheaper than cans (yet more bubbly than cans);</li> <li>significantly reducing your trash volume.</li> </ul>","tags":["sodastream","club-soda"]},{"location":"reading-list/2023/","title":"2023 reading list","text":""},{"location":"reading-list/2023/#misc","title":"Misc","text":"<ul> <li>Using strace and lsof to track down process hangs</li> <li>Mozilla's AI guide</li> <li>Cicada 3301</li> <li>Raft: In Search of an Understandable Consensus Algorithm</li> <li>Large-scale cluster management at Google with Borg</li> <li>Autoenshittification</li> </ul>"},{"location":"reading-list/2023/#linux","title":"Linux","text":"<ul> <li>sudo without a setuid binary or SSH over a UNIX socket</li> <li>Continuous Memory Profiling for Rust</li> <li>The Linux graphics stack in a nutshell, part 1</li> <li>Frame pointers: 1, 2</li> <li>Debian packaging guide</li> <li>DNS in RAM</li> <li>Exploratory data analysis with awk</li> </ul>"},{"location":"reading-list/2023/#observability","title":"Observability","text":"<ul> <li>Tracing methods</li> </ul>"},{"location":"reading-list/2023/#rust","title":"Rust","text":"<ul> <li>Elegant Library APIs in Rust</li> <li>Idiomatic Rust (for C++ Devs): Constructors &amp; Conversions</li> </ul>"},{"location":"reading-list/2024/","title":"2024 reading list","text":""},{"location":"reading-list/2024/#misc","title":"Misc","text":"<ul> <li>Closing the gap: cross-language LTO between Rust and C/C++</li> <li>SPIFFE Concepts</li> <li>How to review code effectively: A GitHub staff engineer\u2019s philosophy</li> <li>Today was a Good Day: The Daily Life of Software Developers</li> </ul>"},{"location":"reading-list/2024/#observability","title":"Observability","text":"<ul> <li>Intro to distributed tracing with Tempo, OpenTelemetry, and Grafana Cloud</li> </ul>"},{"location":"reading-list/2024/#rust","title":"Rust","text":"<ul> <li>Rust Design Patterns</li> <li>Why async Rust?</li> <li>A four year plan for async Rust</li> </ul>"},{"location":"reading-list/comic-relief/","title":"Comic relief","text":"<ul> <li> <p>You can't parse (X)HTML with regex   bobince, 2009</p> </li> <li> <p>Spam solutions craphound, 2004?</p> </li> <li> <p>A Collection of O'rly book Covers   Ben E. C. Boyter, 2016</p> </li> <li> <p>RealTek 8129/8139 PCI NIC driver   Bill Paul, 1998</p> </li> <li> <p>RFC 09/10 x86/enter   Linus Torvalds, 2018</p> </li> <li> <p>IP over Avian Carriers</p> </li> <li> <p>spurious correlations</p> </li> <li> <p>regex crossword</p> </li> <li> <p>Code review antipatterns</p> </li> </ul>"},{"location":"reading-list/culture/","title":"Culture","text":"<ul> <li> <p>The Joel Test: 12 Steps to Better Code   Joel Spolsky, 9 Aug 2000</p> </li> <li> <p>https://conventionalcomments.org/</p> </li> </ul>"},{"location":"reading-list/culture/#code-review","title":"Code review","text":"<ul> <li> <p>A Guide to Mindful Communication in Code Reviews   Amy Ciavolino, 25 Jul 2018.</p> </li> <li> <p>Google Engineering Practices - Code Review</p> </li> </ul>"},{"location":"reading-list/culture/#management","title":"Management","text":"<ul> <li>Engineering Management: The Pendulum Or The Ladder   Charity Majors, 4 Jan 2019</li> </ul>"},{"location":"reading-list/get-up-to-speed/","title":"Get up to speed","text":"<p>Overarching themes.</p> <ul> <li> <p>Software Engineering at Google   Lessons Learned from Programming Over Time, 2020</p> </li> <li> <p>Why numbering should start at zero   Edsger W. Dijkstra, 1982</p> </li> <li> <p>The Cursed Computer Iceberg Meme   Blackle Mori, 2021</p> </li> <li> <p>Linux Performance Analysis in 60,000 Milliseconds</p> </li> </ul>"},{"location":"reading-list/process/","title":"Process","text":"<ul> <li> <p>Architectural Decision Records</p> </li> <li> <p>On the Design of Application Protocols   rfc3117, 2001</p> </li> <li> <p><code>conventional: comments</code>   Paul Slaughter, 2023</p> </li> </ul>"},{"location":"software/cheatsheet/archives/","title":"Archives","text":""},{"location":"software/cheatsheet/archives/#cat-file-in-an-archive1","title":"<code>cat</code> file in an archive[^1]","text":"<pre><code>unzip -p archive.zip file1.txt\n</code></pre> <p>^1</p>"},{"location":"software/cheatsheet/archives/#tar","title":"tar","text":"<pre><code># List\ntar -tvf archive.tar.gz\n\n# Create\ntar -czf archive.tar.gz /path/to/folder\n\n# Extract\ntar xf archive.tar.gz -C /path/to/target\n</code></pre>"},{"location":"software/cheatsheet/binary/","title":"Binary","text":"<p><code>readelf</code>, <code>objdump</code>, <code>strings</code>, <code>ldd</code>, <code>nm</code>, <code>ldconfig -p</code></p>"},{"location":"software/cheatsheet/bug-report/","title":"Ideal bug report","text":""},{"location":"software/cheatsheet/bug-report/#feature-name-title","title":"[Feature Name] Title","text":""},{"location":"software/cheatsheet/bug-report/#environment","title":"Environment","text":""},{"location":"software/cheatsheet/bug-report/#steps-to-reproduce","title":"Steps to reproduce","text":""},{"location":"software/cheatsheet/bug-report/#expected-result","title":"Expected Result","text":""},{"location":"software/cheatsheet/bug-report/#actual-result","title":"Actual Result","text":""},{"location":"software/cheatsheet/bug-report/#visual-proof-screenshots-videos-text","title":"Visual Proof (screenshots, videos, text)","text":""},{"location":"software/cheatsheet/bug-report/#severitypriority","title":"Severity/Priority","text":""},{"location":"software/cheatsheet/conventional/","title":"Conventional X","text":""},{"location":"software/cheatsheet/conventional/#comments","title":"Comments","text":"<p>https://conventionalcomments.org/</p> <ul> <li><code>suggestion (blocking)</code> is similar to <code>todo</code>. Omitting <code>todo</code>.</li> <li>An actionable <code>thought</code>/<code>note</code> is a <code>question</code>. Omitting <code>question</code>, <code>note</code>.</li> </ul> <pre><code>**Praise:** Title\n\nHighlight something positive (do not leave false praise)\n</code></pre> <pre><code>**Nitpick:** Title\n\nNon-blocking, preference-based\n</code></pre> <pre><code>**Polish:** / **Typo:** Title\n\nImmediate quality improvement\n</code></pre> <pre><code>**Suggestion (non-blocking):** Title\n\nPropose improvements (what + why)\n</code></pre> <pre><code>**Question:** Title\n\nUncertain about a potential concern (clarification request)\n</code></pre> <pre><code>**Issue:** Title\n\nHighlight specific problem\n\n\n**Suggestion:** Title\n\nPropose improvements (what + why)\n</code></pre> <pre><code>**Chore:** Title\n\nNeed to follow some existing policy/process\n</code></pre>"},{"location":"software/cheatsheet/conventional/#commits","title":"Commits","text":"<p>https://www.conventionalcommits.org/en/</p> Commit type SemVer Notes <code>fix(scope):</code> PATCH Patch a bug <code>feat(scope):</code> MINOR Introduce new feature <code>&lt;type&gt;!:</code> MAJOR <code>BREAKING CHANGE:</code> footer <code>test(scope):</code> <code>refactor(scope):</code> <code>perf(scope):</code> <code>docs(scope):</code> <code>style(scope):</code> <code>ci(scope):</code> <code>revert:</code> (Depends) <code>Refs:</code> footer"},{"location":"software/cheatsheet/exiftool/","title":"Exif tool","text":"<p>Rename all files so their filename is the creation date timestamp:</p> <pre><code>exiftool -d '%Y-%m-%d_%H%M%S.%%e' '-filename&lt;CreateDate' .\n</code></pre> <p>Set the metadata timestamp to match the filename: <pre><code>exiftool \"-datetimeoriginal&lt;filename\" -overwrite_original ./\n# or\nexiftool \"-alldates&lt;filename\" -overwrite_original ./\n</code></pre></p> <p>Clear all exif data: <pre><code>exiftool -all= \u2212overwrite_original ./\n</code></pre></p>"},{"location":"software/cheatsheet/git/","title":"Git","text":""},{"location":"software/cheatsheet/git/#restore-file-from-another-commit","title":"Restore file from another commit","text":"<pre><code>git checkout c5f567 -- file1/to/restore file2/to/restore\ngit checkout HEAD~2 -- requirements.txt\n</code></pre> <p>Ref: 1</p>"},{"location":"software/cheatsheet/jq/","title":"jq","text":"<p>Playground</p>"},{"location":"software/cheatsheet/jq/#merge-list-of-dictionaries","title":"Merge list of dictionaries","text":"<pre><code>{\n  \"root\":\n  [\n    {\n      \"name\": \"k1\",\n      \"property\": \"v1\"\n    },\n    {\n      \"name\": \"k2\",\n      \"property\": \"v2\"\n    }\n  ]\n}\n</code></pre> <p><pre><code>.root | map({(.name): (.property)}) | add\n</code></pre> <pre><code>{\n  \"k1\": \"v1\",\n  \"k2\": \"v2\"\n}\n</code></pre></p>"},{"location":"software/cheatsheet/privacy-online/","title":"Privacy online","text":""},{"location":"software/cheatsheet/privacy-online/#apps","title":"Apps","text":"<ul> <li>Secure Messaging Apps Comparison</li> </ul>"},{"location":"software/cheatsheet/privacy-online/#encrypted-clienthello-ech","title":"Encrypted ClientHello (ECH)","text":"<p>Bare SNI is subject to eavesdropping/censorship. ECH is encrypted SNI.</p> <ul> <li>Firefox <code>about:config</code> (ref):<ul> <li><code>network.dns.echconfig.enabled: true</code></li> <li><code>network.dns.use_https_rr_as_altsvc: true</code></li> </ul> </li> </ul>"},{"location":"software/cheatsheet/ps/","title":"ps","text":"Command Use-case <code>ps -e -T</code> Show thread names <code>ps -e -o class,rtprio,pri,nice,cmd</code> Show nice and priority <code>renice -n &lt;NI&gt; -p &lt;PID&gt;</code> Renice <code>chrt</code> Change RT scheduling <code>pstree &lt;PID&gt;</code> Process tree"},{"location":"software/cheatsheet/python-multiprocessing/","title":"Python multiprocessing","text":""},{"location":"software/cheatsheet/python-multiprocessing/#split-array-and-process-chunks-independently","title":"Split array and process chunks independently","text":"<pre><code>from multiprocessing import Pool\nfrom time import sleep\nfrom typing import Callable, List\n\nimport numpy as np\n\n\ndef split_and_merge(\n    data: np.ndarray,\n    num_processes: int,\n    function: Callable[[np.ndarray], float],\n) -&gt; float:\n\n    def merge(chunks: List[float]) -&gt; float:\n        return sum(chunks)\n\n    with Pool(num_processes) as pool:\n        return merge(pool.map(function, np.array_split(data, num_processes)))\n\n\nif __name__ == '__main__':\n    def f(arr: np.ndarray) -&gt; float:\n        sleep(2)\n        return float(sum(arr))\n\n    # Calculate the sum of 0..999 using 5 processes\n    arr = np.array(range(1000))\n    assert split_and_merge(arr, 5, f) == sum(range(1000)), \"Uh oh\"\n</code></pre>"},{"location":"software/cheatsheet/python-multiprocessing/#references","title":"References","text":"<ul> <li><code>multiprocessing</code> \u2014 Process-based parallelism</li> </ul>"},{"location":"software/cheatsheet/remote-host/","title":"Remote host","text":""},{"location":"software/cheatsheet/remote-host/#date-and-time","title":"Date and time","text":"<pre><code>timedatectl list-timezones\nsudo timedatectl set-timezone &lt;timezone&gt;\n</code></pre>"},{"location":"software/cheatsheet/remote-host/#scheduled-tasks","title":"Scheduled tasks","text":"<pre><code>systemctl list-timers\n</code></pre>"},{"location":"software/cheatsheet/remote-host/#journalctl","title":"journalctl","text":"<pre><code>journalctl --since 08:55:00 --no-pager | less\n</code></pre>"},{"location":"software/cheatsheet/remote-host/#sysstat","title":"sysstat","text":"<p>Install sysstat <pre><code>sudo apt install sysstat\nsed -i 's/ENABLED=\"false\"/ENABLED=\"true\"/' /etc/default/sysstat\nsystemctl restart sysstat sysstat-collect.timer sysstat-summary.timer\n</code></pre></p> <p>Then inspect:</p> <pre><code>sar -r -q -f /var/log/sysstat/{sa_for_that_day} -s 17:50:01 -e 18:01:01\n</code></pre>"},{"location":"software/cheatsheet/remote-host/#unexpected-pod-restarts","title":"Unexpected pod restarts","text":"<p>Get restart count per pod: <pre><code>kubectl -n $namespace get pods \\\n  -o=jsonpath='{range .items[*]}{range .status.containerStatuses[*]}{.name}{\" \"}{.restartCount}{\"\\n\"}{end}{end}' \\\n  | grep -v charm\n</code></pre> or: <pre><code>kubectl -n cos-lite-load-test get pods -o=jsonpath='{\"{\"}{range .items[*]}{\"\\\"\"}{.metadata.name}{\"\\\":{\"}{range .status.containerStatuses[*]}{\"\\\"\"}{.name}{\"\\\":\"}{.restartCount}{\",\"}{end}{\"},\"}{end}{\"}\"}' | sed 's/,},/},/g' | sed 's/},}/}}/g' | jq\n</code></pre></p> <p>Check for OOM kills: <pre><code>journalctl --no-pager -kqg 'killed process' -o verbose --output-fields=MESSAGE\n</code></pre></p> <p>Check for node pressure eviction <pre><code>journalctl | grep eviction\n</code></pre></p>"},{"location":"software/cheatsheet/remote-host/#pod-hits-resource-limit","title":"Pod hits resource limit","text":"<p>This is useful to see if resource limits prevent scheduling a pod:</p> <pre><code>kubectl get pod grafana-0 -o=jsonpath='{.status}' -n test-bundle-zdsv\n</code></pre>"},{"location":"software/cheatsheet/remote-host/#certs","title":"Certs","text":""},{"location":"software/cheatsheet/remote-host/#verify-remote-certificate-chain","title":"Verify remote certificate chain","text":"<pre><code>echo | openssl s_client -strict -verify_return_error -connect charmhub.io:443 || echo \"failed\"\n</code></pre>"},{"location":"software/cheatsheet/remote-host/#view","title":"View","text":"<pre><code>echo | openssl s_client -showcerts -servername charmhub.io -connect charmhub.io:443 | openssl x509 -text -noout\n</code></pre>"},{"location":"software/cheatsheet/remote-host/#compare","title":"Compare","text":"<pre><code>diff -y &lt;(openssl x509 -in a.crt -text -noout) &lt;(openssl x509 -in b.crt -text -noout)\n</code></pre>"},{"location":"software/cheatsheet/ssh/","title":"SSH cheatsheet","text":""},{"location":"software/cheatsheet/ssh/#access-charms-web-ui-when-they-are-deployed-on-multipass","title":"Access charm's web UI when they are deployed on multipass","text":"<pre><code>MULTIPASS_VM_IP=\"10.43.8.206\"  # From `multipass list`\nGRAFANA_UNIT_IP=\"10.1.166.80\"  # From `juju status`\nGRAFANA_WORKLOAD_PORT=\"3000\"   # From familiarity with the app\n\nsudo ssh -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking no\" \\\n  -i /var/snap/multipass/common/data/multipassd/ssh-keys/id_rsa \\\n  ubuntu@$MULTIPASS_VM_IP \\\n  -L 8080:$GRAFANA_UNIT_IP:$GRAFANA_WORKLOAD_PORT\n</code></pre> <pre><code>sudo sshuttle -r ubuntu@10.196.135.115 10.1.27.0/16 \\\n  --ssh-cmd 'ssh -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking no\" \\\n  -i /var/snap/multipass/common/data/multipassd/ssh-keys/id_rsa'\n</code></pre>"},{"location":"software/cheatsheet/ssh/#set-up-ssh-server","title":"Set up SSH server","text":"<p>Install ssh server on the server and back-up the config file: <pre><code>sudo apt install openssh-server\nsudo cp /etc/ssh/sshd_config{,.bak}\n</code></pre></p> <p>Update config (<code>/etc/ssh/sshd_config</code>): <pre><code>-#PermitRootLogin prohibit-password\n+PermitRootLogin no\n\n-#PasswordAuthentication yes\n+PasswordAuthentication no\n</code></pre></p> <p>Test the config before reloading: <pre><code>sudo sshd -t -f /etc/ssh/sshd_config\n</code></pre></p> <p>Reload: <pre><code>sudo systemctl reload ssh\n</code></pre></p> <p>Generate key pair on the client: <pre><code>ssh-keygen -t rsa -b 4096 -f ~/secrets/tailscale-ssh -C \"\"\n</code></pre></p> <ul> <li><code>.rw------- ~/secrets/tailscale-ssh</code> (private key)</li> <li><code>.rw-r--r-- ~/secrets/tailscale-ssh.pub</code> (public key)</li> </ul> <p>Copy the public key to the server and update the list of authorized keys <pre><code>cat /tmp/tailscale-ssh.pub &gt;&gt; ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n</code></pre></p> <p>From the client, log in to the server: <pre><code>ssh -i ~/secrets/tailscale-ssh \\                                                                                                                                                                   [\u00b1main \u25cf\u25cf\u25cf]\n  -o \"UserKnownHostsFile=/dev/null\" \\\n  -o \"StrictHostKeyChecking no\" \\\n  user@remote\n</code></pre></p>"},{"location":"software/cheatsheet/ssh/#generate-ssh-key-for-github","title":"Generate SSH key for GitHub","text":"<pre><code>ssh-keygen -t ed25519 -C \"82407168+sed-i@users.noreply.github.com\" -N \"\" -f github_ssh\n</code></pre> <p>Refs: 1, 2 3</p> <p>Then, <pre><code>git config --global gpg.format ssh\ngit config --global user.signingkey /PATH/TO/github_ssh.pub\ngit config --global commit.gpgsign true  # sign all commit by default (optional)\n</code></pre></p>"},{"location":"software/cheatsheet/starcraft/","title":"*craft","text":""},{"location":"software/cheatsheet/starcraft/#craft-parts","title":"craft-parts","text":"<p>Ref.</p> <pre><code>graph TD\n\nsubgraph Part\n$CRAFT_PART_SRC\n$CRAFT_PART_BUILD\n$CRAFT_PART_INSTALL\nend\n\n$CRAFT_PROJECT_DIR\n---&gt;|pull| $CRAFT_PART_SRC\n---&gt;|build| $CRAFT_PART_BUILD\n---&gt;|build| $CRAFT_PART_INSTALL\n---&gt;|stage| $CRAFT_STAGE\n---&gt;|prime| $CRAFT_PRIME\n\n$CRAFT_PROJECT_DIR\n---&gt;|overlay| $CRAFT_OVERLAY\n---&gt;|stage| $CRAFT_STAGE\n\n$CRAFT_PART_INSTALL\n---&gt;|organize| $CRAFT_PART_INSTALL</code></pre>"},{"location":"software/cheatsheet/starcraft/#snapcraft","title":"Snapcraft","text":"<ul> <li>Install LXD</li> <li>\"First snap\" generator</li> <li>Create a developer account</li> <li>Schema:<ul> <li>top-level</li> <li>parts</li> <li>app &amp; service</li> <li>plugins</li> </ul> </li> <li>Supported interfaces</li> </ul>"},{"location":"software/cheatsheet/starcraft/#charmcraft","title":"Charmcraft","text":""},{"location":"software/cheatsheet/starcraft/#publish-a-charm-to-charmhub","title":"Publish a charm to charmhub","text":"<p>Publishing to charmhub is straightforward: all you need to do is follow the register-upload-release workflow.</p> <p>Note: in headless environments (e.g. multipass), use this:</p> <pre><code>dbus-run-session -- bash -c \"echo password | gnome-keyring-daemon --unlock; charmcraft &lt;args&gt;\"\n</code></pre>"},{"location":"software/cheatsheet/starcraft/#register-a-new-charms-name-under-your-account","title":"Register a new charm's name under your account","text":"<pre><code>charmcraft names\ncharmcraft register karma-k8s\n</code></pre>"},{"location":"software/cheatsheet/starcraft/#pack-and-upload-charm","title":"Pack and upload charm","text":"<pre><code>charmcraft pack\ncharmcraft upload karma-k8s_ubuntu-20.04-amd64.charm\ncharmcraft revisions karam-k8s\n</code></pre>"},{"location":"software/cheatsheet/starcraft/#upload-resource-eg-oci-image","title":"Upload resource (e.g. OCI image)","text":"<pre><code>charmcraft resources karma-k8s\ncharmcraft status karma-k8s\n</code></pre> <pre><code>docker pull ghcr.io/prymitive/karma:v0.92\nIMAGE_ID=$(docker images -q ghcr.io/prymitive/karma:v0.92)\ncharmcraft upload-resource karma-k8s karma-image --image=$IMAGE_ID\ncharmcraft resource-revisions karma-k8s karma-image\n</code></pre> <pre><code>IMAGE=\"docker://ghcr.io/prymitive/karma:v0.114\"\nDIGEST=$(skopeo inspect $IMAGE | jq -r '.Digest')\n\nCHARM=\"karma-k8s\"\nRESOURCE=\"karma-image\"\ncharmcraft upload-resource $CHARM $RESOURCE --image=$DIGEST\n</code></pre>"},{"location":"software/cheatsheet/starcraft/#release","title":"Release","text":"<pre><code>charmcraft release karma-k8s --channel=edge --revision=1 --resource=karma-image:1\ncharmcraft status karma-k8s\n</code></pre>"},{"location":"software/cheatsheet/starcraft/#publish-a-bundle-to-charmhub","title":"Publish a bundle to charmhub","text":"<pre><code>charmcraft names\ncharmcraft register lma-light\ncharmcraft revisions lma-light\n\ncharmcraft pack\ncharmcraft upload lma-light.zip\ncharmcraft revisions lma-light\n\ncharmcraft release lma-light --channel=edge --revision=1\ncharmcraft status lma-light\n</code></pre>"},{"location":"software/cheatsheet/starcraft/#publish-a-library","title":"Publish a library","text":"<pre><code>charmcraft list-lib alertmanager-k8s\n\n# The next command may overwrite existing files, so backup first\ncharmcraft create-lib alertmanager_remote_configuration\n\ncharmcraft publish-lib charms.alertmanager_k8s.v0.alertmanager_remote_configuration\n</code></pre> <p>See official docs.</p>"},{"location":"software/cheatsheet/starcraft/#curl-library","title":"curl library","text":""},{"location":"software/cheatsheet/starcraft/#resource-revision","title":"resource revision","text":"<pre><code>curl -XPOST --header \"Content-Type: application/json\" -d '{\"context\":[],\"actions\":[{\"action\":\"install\",\"instance-key\":\"this-is-a-test-for-resources-lookup-2025-06-11\",\"name\":\"prometheus-k8s\", \"channel\": \"latest/stable\", \"base\":{\"architecture\":\"amd64\",\"name\":\"ubuntu\",\"channel\":\"20.04\"}}],\"fields\":[\"download\",\"id\",\"name\",\"revision\",\"version\", \"resources\"]}' https://api.charmhub.io/v2/charms/refresh  2&gt;/dev/null | jq\n</code></pre>"},{"location":"software/cheatsheet/strace/","title":"<code>strace</code>","text":""},{"location":"software/cheatsheet/strace/#whats-strace","title":"What's strace?","text":"<ul> <li>Trace calls to system calls, signals</li> <li>Debug programs for which no source is available</li> <li>Simple profiling</li> </ul>"},{"location":"software/cheatsheet/strace/#profiling","title":"Profiling","text":"<pre><code>strace -wc ./a.out  # wall time\n</code></pre>"},{"location":"software/cheatsheet/strace/#use-strace-in-the-wild","title":"Use strace \"in the wild\"","text":""},{"location":"software/cheatsheet/strace/#systemd","title":"systemd","text":"<p>Prepend the command: <code>ExecStart=/usr/bin/strace /path/to/bin</code></p>"},{"location":"software/cheatsheet/strace/#replace-the-binary","title":"Replace the binary<sup>1</sup>","text":"<p><pre><code>mv /usr/bin/something /usr/bin/something.real\n</code></pre> <pre><code>cat &lt;&lt;EOF &gt; /usr/bin/something\n#!/usr/bin/env bash\n\nstrace \"@!\" 2&gt;&amp;1 | tee /tmp/something.log.$$\nEOF\n</code></pre> <pre><code>chmod +x /usr/bin/something\n</code></pre></p> <ol> <li> <p>h/t @rbarry82 \u21a9</p> </li> </ol>"},{"location":"software/cheatsheet/text/","title":"Text manipulations","text":""},{"location":"software/cheatsheet/text/#remove-all-lines-matching-a-pattern","title":"Remove all lines matching a pattern","text":"<pre><code>sed -i '/the_pattern/d' file.name\n</code></pre>"},{"location":"software/cheatsheet/text/#replace-pattern-in-all-files","title":"Replace pattern in all files","text":"<pre><code>find /path/to/search -type f -exec sed -i 's/old_text/new_text/g' {} +\n</code></pre>"},{"location":"software/cheatsheet/text/#columnar-trim","title":"Columnar trim","text":"<p>Trim the first 5 characters of every line: <pre><code>cut -c6- file.name\n</code></pre></p>"},{"location":"software/cheatsheet/urls/","title":"urls","text":"<pre><code>graph LR\n\nscheme ---|://| username\n\nsubgraph netloc\nusername ---|:| password ---|@| hostname ---|:| port\nend\n\nport --- path[\"/path\"]</code></pre>"}]}